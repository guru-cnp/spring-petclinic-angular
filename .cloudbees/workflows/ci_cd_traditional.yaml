apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: ci_cd_traditional
on:
  push:
    branches:
      - asd
env:
  BUILD_ID: ${{ cloudbees.version }}
  NEXUS_HELM: ${{ vars.guru_rep_nexus_url }}/repository/helm-hosted/
jobs:
  build_TGZ:
    steps:
      - uses: cloudbees-io/checkout@v1
        name: Checkout
      - uses: docker://golang:1.20
        name: configure version
        run: |
          sed -i "s/\"version\": .*/\"version\": \"$BUILD_ID\",/" ./package.json
          cat ./package.json | grep "version"
        shell: sh
      - uses: docker://node:latest
        name: npm build
        kind: build
        run: |-
          npm install --force
          export NODE_OPTIONS=--openssl-legacy-provider
          npm run build
          tar -cvzf dist.tgz ./dist
      - uses: docker://node:latest
        name: scan with sonar
        kind: scan
        run: 'echo "to be done: scan with sonar="'
      - uses: docker://alpine/helm:latest
        name: publish to nexus
        run: curl -v -u ${{ vars.guru_rep_nexus_user }}:${{ secrets.guru_rep_nexus_cred
          }}  -X POST '${{ vars.guru_rep_nexus_url
          }}/service/rest/v1/components?repository=raw'
          -F raw.assetN=@./dist.tgz
          -F "raw.directory=/spring-petclinic-angular/latest"
          -F "raw.assetN.filename=spring-petclinic-angular.tgz"
  manage_chart:
    steps:
      - uses: cloudbees-io/checkout@v1
        name: checkout
      - uses: docker://golang:1.20
        name: configure
        run: |
          sed -i "s/^version:.*$/version: $BUILD_ID/" chart/spring-petclinic-angular/Chart.yaml
          sed -i "s/^appVersion:.*$/appVersion: $BUILD_ID/" chart/spring-petclinic-angular/Chart.yaml
          sed -i "s/^  tag:.*$/  tag: $BUILD_ID/" chart/spring-petclinic-angular/values.yaml
          cat chart/spring-petclinic-angular/Chart.yaml
        shell: sh
      - uses: docker://alpine/helm:latest
        name: package
        run: |
          cd chart
          helm package spring-petclinic-angular
          ls -lart
        shell: sh
      - uses: guru-actions/helm-push@1.6
        name: publish
        with:
          chart_package: chart/spring-petclinic-angular-$BUILD_ID.tgz
          remote_repo: $NEXUS_HELM
          remote_user_name: ${{ vars.guru_rep_nexus_user }}
          remote_password: ${{ secrets.guru_rep_nexus_cred }}
    needs: build_Docker
  deploy_K8s:
    steps:
      - uses: guru-actions/kubeconfig@1.11
        name: setup kubeconf
        with:
          secname: ${{ secrets.guru_rep_petclinic_kubeconf }}
      - uses: docker://bitnami/kubectl:latest
        name: check kubeconf
        run: kubectl get pods
      - uses: guru-actions/helm-deploy@1.23
        name: deploy chart
        kind: deploy
        with:
          chart: spring-petclinic-angular/spring-petclinic-angular
          repo: $NEXUS_HELM
          namespace: petclinic
          release: petclinic-fm
          version: $BUILD_ID
          repousername: ${{ vars.guru_rep_nexus_user }}
          repopassword: ${{ secrets.guru_rep_nexus_cred }}
    needs:
      - build_Docker
      - manage_chart
  build_Docker:
    steps:
      - uses: docker://alpine/git:2.43.0
        name: add safe dir
        run: |
          git config --global --add safe.directory /cloudbees/workspace
      - uses: cloudbees-io/checkout@v1
        name: checkout
      - uses: cloudbees-io/configure-oci-credentials@v1
        name: Setup Docker Hub Registry
        with:
          registry: index.docker.io
          username: ${{ vars.GURUREP_DOCKER_USERNAME }}
          password: ${{ secrets.GURUREP_DOCKER_PASSWORD }}
      - uses: cloudbees-io/kaniko@v1
        name: build docker
        kind: build
        with:
          dockerfile: Dockerfile
          destination: gururepservice/spring-petclinic-angular:${{ cloudbees.version
            }},gururepservice/spring-petclinic-angular:latest
          build-args: BUILDKIT_CONTEXT_KEEP_GIT_DIR=1,BUILDKIT_INLINE_CACHE=1
          labels: maintainer=Jakub Zarzycki,version=1.2.3.4
  deploy_VM_Docker:
    needs: build_Docker
    steps:
      - uses: cloudbees-io/ssh-deploy-actions@v1
        with:
          host: ${{ vars.petclinic_ssh_host }}
          port: "22"
          username: ${{ vars.petclinic_cnp_username }}
          password: ${{ secrets.petclinic_cnp_pwd }}
          script: |-
            petclinicPID=`pm2 pid petclinic`
            if [ ! -z $petclinicPID ] ; then
              pm2 delete petclinic 2>&1 && return 0
            fi
            sudo docker pull springcommunity/spring-petclinic-rest:latest
            sudo docker pull gururepservice/spring-petclinic-angular:latest
            if [ "$(sudo docker ps -q)" ]; then
              sudo docker kill $(sudo docker ps -q)
              sudo docker run -d -p 8557:9966 springcommunity/spring-petclinic-rest:latest
              sudo docker run -d -p 8080:8080 gururepservice/spring-petclinic-angular:latest
            fi