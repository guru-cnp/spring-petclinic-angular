apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: My workflow
on:
  push:
    branches:
      - "**"
env:
  BUILD_ID: ${{ cloudbees.version }}
jobs:
  build_TGZ:
    steps:
      - uses: cloudbees-io/checkout@v1
        name: Checkout
      - uses: docker://golang:1.20
        name: configure version
        run: |
          sed -i "s/\"version\": .*/\"version\": \"$BUILD_ID\",/" ./package.json
          cat ./package.json | grep "version"
        shell: sh
      - uses: docker://node:latest
        name: npm build
        kind: build
        run: |-
          npm install --force
          export NODE_OPTIONS=--openssl-legacy-provider
          npm run build
      - uses: docker://node:latest
        name: scan with sonar
        kind: scan
        run: 'echo "to be done: scan with sonar="'
      - uses: docker://node:16.3-alpine
        name: create local package
        run: |-
          tar -cvzf dist.tgz ./dist
      - uses: docker://alpine/helm:latest
        name: publish to nexus
        run: curl -v -u ${{ vars.guru_rep_nexus_user }}:${{ secrets.guru_rep_nexus_cred
          }}  -X POST '${{ vars.guru_rep_nexus_url
          }}/service/rest/v1/components?repository=raw'
          -F raw.assetN=@./dist.tgz
          -F raw.directory=/angular
          -F "raw.assetN.filename=spring-petclinic-angular-$BUILD_ID.tgz"
  deploy_K8s:
    steps:
      - uses: guru-actions/kubeconfig@1.11
        name: setup kubeconf
        with:
          secname: ${{ secrets.guru_rep_petclinic_kubeconf }}
      - uses: docker://bitnami/kubectl:latest
        name: check kubeconf
        run: kubectl get pods
    needs: build_Docker
  build_Docker:
    steps:
      - uses: docker://alpine/git:2.43.0
        name: add safe dir
        run: |
          git config --global --add safe.directory /cloudbees/workspace
      - uses: cloudbees-io/checkout@v1
        name: checkout
      - uses: cloudbees-io/configure-oci-credentials@v1
        name: Setup Docker Hub Registry
        with:
          registry: index.docker.io
          username: ${{ vars.GURUREP_DOCKER_USERNAME }}
          password: ${{ secrets.GURUREP_DOCKER_PASSWORD }}
      - uses: cloudbees-io/kaniko@v1
        name: build docker
        kind: build
        with:
          dockerfile: Dockerfile
          destination: gururepservice/spring-petclinic-angular:${{ cloudbees.version
            }},gururepservice/spring-petclinic-angular:latest
          build-args: BUILDKIT_CONTEXT_KEEP_GIT_DIR=1,BUILDKIT_INLINE_CACHE=1
          labels: maintainer=Jakub Zarzycki,version=1.2.3.4
  deploy_VM_Nexus:
    #needs: build_TGZ
    steps:
      - uses: docker://golang:1.20
        name: prep script
        run: |
          echo "$BUILD_ID"
          echo "${{env.BUILD_ID}}"
          echo "sudo docker pull springcommunity/spring-petclinic-rest:latest
            if [ \"$(sudo docker ps -q)\" ]; then
              sudo docker kill $(sudo docker ps -q)
              sudo docker run -d -p 8557:9966 springcommunity/spring-petclinic-rest:latest
            fi
            wget https://nexus.guru-rep.sa-demo.beescloud.com/repository/raw/angular/spring-petclinic-angular-$BUILD_ID.tgz
            tar -xvzf spring-petclinic-angular-$BUILD_ID.tgz
            npm install http-server" >> script.sh
        shell: sh
      - uses: cloudbees-io/ssh-deploy-actions@v1
        with:
          host: ${{ vars.petclinic_ssh_host }}
          port: "22"
          username: ${{ vars.petclinic_cnp_username }}
          password: ${{ secrets.petclinic_cnp_pwd }}
          script: echo ./script.sh